# -*- coding: utf-8 -*-
"""c1p5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d2EgTQYfm-LDuLcm-4rJQTFMjY3_D1m2
"""

#Funtion to print all possible substrings
def get_all_substrings(str1):
  for i in range(0,len(str1)+1):
    k = len(str1) - i
    for j in range(i,k+i+1):
      print(str1[i:j])

get_all_substrings("abcd")

#Function to print all possible substrings of length K
def subs_len(str1,K):
  for i in range(0,len(str1)+1):
    k = len(str1) - i
    for j in range(i,k+i+1):
      stk = str1[i:j]
      if len(stk) == K :
        print(stk)
subs_len("abcd",3)

#Function to Print all possible substrings 
#of length K with N distinct characters.
def subs_lenK_uniN(str1,K,N):
    for i in range(0,len(str1)+1):
      k = len(str1) - i
      for j in range(i,k+i+1):
        stk = str1[i:j]
        isuni = True
        if len(stk) == K :
          set2 = set(stk)
          if len(set2) == len(stk):
            print(stk)
subs_lenK_uniN("aadddff",2,1)

#Function to print substring of length maximum length with N distinct
# characters

def MaxlenN_distinct(str1,N):
  for i in range(0,len(str1)+1):
      k = len(str1) - i
      for j in range(i,k+i+1):
        stk = str1[i:j]
        isuni = True
        if len(stk) == N :
          set2 = set(stk)
          if len(set2) == len(stk):
            print(stk)
MaxlenN_distinct("dcdc",2)

#Function to print Palindrome substrings
def Palindrome_substrings(str1):
  for i in range(0,len(str1)+1):
    k = len(str1) - i
    for j in range(i,k+i+1):
      stk = str1[i:j]
      stkrev = stk[::-1]
      if stk == stkrev :
        print(stk)
Palindrome_substrings("abbaba")

